#!/bin/bash
# Scan APK files for secret code
#
# Unpack APK files and extract AndroidManifest.xml using apktool, and search for "android_secret_code"
#

TEMP_DIR=/tmp/tmp_dir_$$

function help()
{
	echo "Usage: $(basename $0) file1.apk ..."
	echo ""
	echo "Scan apk files for 'android_secret_code' in AndroidManifest.xml file"
	echo "Requires apktool(http://code.google.com/p/android-apktool) to work."
}

function find_secret_code()
{
	apk=$1
	
	echo $apk:

	apktool -q d "$apk" $TEMP_DIR 2>&1 > /dev/null
	if [ ! -e $TEMP_DIR/AndroidManifest.xml ]; then
		echo -e "\tNot a valid APK file"
		rm -rf $TEMP_DIR 2>/dev/null
		return
	fi

	if ! (grep android_secret_code $TEMP_DIR/AndroidManifest.xml 2>&1 >/dev/null); then
		echo -e "\tN/A"
	else
		perl -nle "if (/android_secret_code/) {s/^.*android:host[ \t]*=[ \t]*\"([^\"]+)\".*$/\1/g; print \"\t\$_\"}" $TEMP_DIR/AndroidManifest.xml
	fi

	rm -rf $TEMP_DIR 2>/dev/null
}

if [ "$1" == "-h" -o "$1" == "--help" ]; then
	help
	exit 0
fi

if ! (which apktool > /dev/null); then
	echo Can not find apktool.
	echo Please install apktool first from http://code.google.com/p/android-apktool/
	exit 1
fi

for i; do
	find_secret_code "$i"
done

# Clean up the $HOME/apktool folder created by apktool
rm -rf $HOME/apktool 2>/dev/null
